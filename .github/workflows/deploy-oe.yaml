---
# This workflow will run deploy the oe microservice

name: Deploy oe

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - '*'
    paths:
      - 'sk-oe/**'
      - '.github/workflows/deploy-oe.yaml'
  release:
    types: [released]

jobs:
  deploy:
    if: github.repository_owner == '18F'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: 18F/identity-give-cf-setup@v2
        id: cf-setup
        with:
          cf-username: ${{ secrets.CF_USERNAME }}
          cf-password: ${{ secrets.CF_PASSWORD }}
          cf-org: ${{ secrets.CF_ORG }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Set SK Secrets
        run: |
          target_env_upper=${{ steps.cf-setup.outputs.target-environment-upper }}
          echo "SK_SECRETS=SK_SECRETS_$target_env_upper" >> $GITHUB_ENV

      - uses: 18F/identity-give-sk-setup@v1
        id: sk-setup
        with:
          require-redis: "true"
          require-postgres: "true"
          s3-url: "s3://com.singularkey.gsa/dev/oe"
          app-directory: "sk-oe"
          sk-secrets: ${{ secrets[env.SK_SECRETS] }}

      - name: Perform Deployment
        run: |
          cd sk-oe/
          if [[ ${{ steps.cf-setup.outputs.target-environment }} == "prod" ]]; then
            cf push --vars-file vars.yaml --strategy rolling --instances 4
          else
            cf push --vars-file vars.yaml --strategy rolling
          fi

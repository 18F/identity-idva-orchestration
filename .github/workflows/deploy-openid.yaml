---
# This workflow will deploy the openid microservice

name: Deploy openid

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - '*'
    paths:
      - 'sk-openid/**'
      - '.github/workflows/deploy-openid.yaml'

jobs:
  deploy:
    if: github.repository_owner == '18F'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install CloudFoundry CLI
        run: |
          curl -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=v7&source=github" | sudo tar -zx --directory=/usr/local/bin
          cf --version

      - name: Setup CF CLI auth
        run: |
          cf api https://api.fr.cloud.gov
          cf auth ${{ secrets.CF_USERNAME }} ${{ secrets.CF_PASSWORD }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Download app file with AWS CLI
        run: |
          aws s3 cp s3://com.singularkey.gsa/dev/microservice-openid/hash sk-openid/hash
          aws s3 cp "s3://com.singularkey.gsa/dev/microservice-openid/$(cat sk-openid/version)" sk-openid/sk-app

      - name: Check hash
        run: |
          cd sk-openid
          sha256sum -c hash

      - name: Make Executable
        run: chmod +x sk-openid/sk-app

      - name: Write SingularKey secrets to CF vars file
        run: |
          echo "---" > vars.yaml
          echo "SK_SECRETS: |" >> vars.yaml
          echo '  ${{ secrets.SK_SECRETS }}' >> vars.yaml

      - name: Deploy application
        run: |
          cf target -o gsa-tts-identity-prototyping -s give-dev
          cd sk-openid
          cf push --vars-file ../vars.yaml --strategy rolling
